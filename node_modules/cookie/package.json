{
  "_args": [
    [
      {
        "raw": "cookie@0.5.0",
        "scope": null,
        "escapedName": "cookie",
        "name": "cookie",
        "rawSpec": "0.5.0",
        "spec": "0.5.0",
        "type": "version"
      },
      "C:\\Users\\fernando.hasckel\\Documents\\prodeto-pessoal\\Cloud\\node_modules\\express"
    ]
  ],
  "_from": "cookie@0.5.0",
  "_hasShrinkwrap": false,
  "_id": "cookie@0.5.0",
  "_location": "/cookie",
  "_nodeVersion": "16.14.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/cookie_0.5.0_1649719916997_0.8696374152245456"
  },
  "_npmUser": {
    "name": "dougwilson",
    "email": "doug@somethingdoug.com"
  },
  "_npmVersion": "8.3.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "cookie@0.5.0",
    "scope": null,
    "escapedName": "cookie",
    "name": "cookie",
    "rawSpec": "0.5.0",
    "spec": "0.5.0",
    "type": "version"
  },
  "_requiredBy": [
    "/express"
  ],
  "_resolved": "https://registry.npmjs.org/cookie/-/cookie-0.5.0.tgz",
  "_shasum": "d1f5d71adec6558c58f389987c366aa47e994f8b",
  "_shrinkwrap": null,
  "_spec": "cookie@0.5.0",
  "_where": "C:\\Users\\fernando.hasckel\\Documents\\prodeto-pessoal\\Cloud\\node_modules\\express",
  "author": {
    "name": "Roman Shtylman",
    "email": "shtylman@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/jshttp/cookie/issues"
  },
  "contributors": [
    {
      "name": "Douglas Christopher Wilson",
      "email": "doug@somethingdoug.com"
    }
  ],
  "dependencies": {},
  "description": "HTTP server cookie parsing and serialization",
  "devDependencies": {
    "beautify-benchmark": "0.2.4",
    "benchmark": "2.1.4",
    "eslint": "7.32.0",
    "eslint-plugin-markdown": "2.2.1",
    "mocha": "9.2.2",
    "nyc": "15.1.0",
    "safe-buffer": "5.2.1",
    "top-sites": "1.1.97"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-YZ3GUyn/o8gfKJlnlX7g7xq4gyO6OSuhGPKaaGssGB2qgDUS0gPgtTvoyZLTt9Ab6dC4hfc9dV5arkvc/OCmrw==",
    "shasum": "d1f5d71adec6558c58f389987c366aa47e994f8b",
    "tarball": "https://registry.npmjs.org/cookie/-/cookie-0.5.0.tgz",
    "fileCount": 6,
    "unpackedSize": 23137,
    "signatures": [
      {
        "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
        "sig": "MEQCIHTyGhjx8nRt+f1Wkf5RFsF80x/VnzKUBa6tr07jrRCHAiA/qDBmYZDmUd+wGBg6BX6wbiLq+PG5JhA7t8k2aVfPIw=="
      }
    ],
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiVLptACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpfQBAAmCi0G6edCjzcJvhorqbfM5Yfq2fTUyHQto5S49qphrYaZhAw\r\nVhmxClv2Uy0LFkdY/WMIsE9pihciNNiHfonfz4Eis+HxoUKaGYQHAayPGB/w\r\nGHK54F7ETV8dQrOao/YHrSjTiNvmXlBoMDym7M7GVBKCWw1XOSUDt393CGZJ\r\nbpppE/dsaTXwYdF1UillWZCyE1R0mYcMw837P19rrdnSA/tjjaq3fpfmZCEk\r\nEtXgq7PwDgKFtsap4NT67LcqnLQRBpY1VsK7O71qFWl7KN34haJTiGaBZIH6\r\ndzQIC9eU28IF+TqoR/zErnUy8d5NqEl4J1kSItKOuViuJz+T7EJFdLJ4aluB\r\n1FMnpGk4vGMz7fkJPJKGrZv4qraihUz/KOkGxbawVqcN+1AgwdbE3tX/dS97\r\nAlTRyZqCiBSkpQdMNeOnLhZSPHoEXsuKgmkSh8LFxCVzaRrt8VhnDizQrwPA\r\nv53ZChQnDNYh3wYSWHayt+SvFLG+waCByshO3B4LvkEHjmLrGhf9pvmikO5Z\r\naoCas8zVWrV5M0oCE/0cEcvKQOATMzvXJHWAceUvdCSjgC8bbVhr5sMoL60L\r\n83AmM3cCtL5RUomN2k4mcpvpOmQLXZkvXjv9jFt6uwaXsmbQu2jP72vXKfV8\r\n3oDJ66twILRP9sTA5NiBirpnWOgohtjCLfo=\r\n=xQmr\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">= 0.6"
  },
  "files": [
    "HISTORY.md",
    "LICENSE",
    "README.md",
    "SECURITY.md",
    "index.js"
  ],
  "gitHead": "663c9aeb85c9e046ff2ad2cdec631afdd40a7965",
  "homepage": "https://github.com/jshttp/cookie#readme",
  "keywords": [
    "cookie",
    "cookies"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "dougwilson",
      "email": "doug@somethingdoug.com"
    }
  ],
  "name": "cookie",
  "optionalDependencies": {},
  "readme": "# cookie\n\n[![NPM Version][npm-version-image]][npm-url]\n[![NPM Downloads][npm-downloads-image]][npm-url]\n[![Node.js Version][node-version-image]][node-version-url]\n[![Build Status][github-actions-ci-image]][github-actions-ci-url]\n[![Test Coverage][coveralls-image]][coveralls-url]\n\nBasic HTTP cookie parser and serializer for HTTP servers.\n\n## Installation\n\nThis is a [Node.js](https://nodejs.org/en/) module available through the\n[npm registry](https://www.npmjs.com/). Installation is done using the\n[`npm install` command](https://docs.npmjs.com/getting-started/installing-npm-packages-locally):\n\n```sh\n$ npm install cookie\n```\n\n## API\n\n```js\nvar cookie = require('cookie');\n```\n\n### cookie.parse(str, options)\n\nParse an HTTP `Cookie` header string and returning an object of all cookie name-value pairs.\nThe `str` argument is the string representing a `Cookie` header value and `options` is an\noptional object containing additional parsing options.\n\n```js\nvar cookies = cookie.parse('foo=bar; equation=E%3Dmc%5E2');\n// { foo: 'bar', equation: 'E=mc^2' }\n```\n\n#### Options\n\n`cookie.parse` accepts these properties in the options object.\n\n##### decode\n\nSpecifies a function that will be used to decode a cookie's value. Since the value of a cookie\nhas a limited character set (and must be a simple string), this function can be used to decode\na previously-encoded cookie value into a JavaScript string or other object.\n\nThe default function is the global `decodeURIComponent`, which will decode any URL-encoded\nsequences into their byte representations.\n\n**note** if an error is thrown from this function, the original, non-decoded cookie value will\nbe returned as the cookie's value.\n\n### cookie.serialize(name, value, options)\n\nSerialize a cookie name-value pair into a `Set-Cookie` header string. The `name` argument is the\nname for the cookie, the `value` argument is the value to set the cookie to, and the `options`\nargument is an optional object containing additional serialization options.\n\n```js\nvar setCookie = cookie.serialize('foo', 'bar');\n// foo=bar\n```\n\n#### Options\n\n`cookie.serialize` accepts these properties in the options object.\n\n##### domain\n\nSpecifies the value for the [`Domain` `Set-Cookie` attribute][rfc-6265-5.2.3]. By default, no\ndomain is set, and most clients will consider the cookie to apply to only the current domain.\n\n##### encode\n\nSpecifies a function that will be used to encode a cookie's value. Since value of a cookie\nhas a limited character set (and must be a simple string), this function can be used to encode\na value into a string suited for a cookie's value.\n\nThe default function is the global `encodeURIComponent`, which will encode a JavaScript string\ninto UTF-8 byte sequences and then URL-encode any that fall outside of the cookie range.\n\n##### expires\n\nSpecifies the `Date` object to be the value for the [`Expires` `Set-Cookie` attribute][rfc-6265-5.2.1].\nBy default, no expiration is set, and most clients will consider this a \"non-persistent cookie\" and\nwill delete it on a condition like exiting a web browser application.\n\n**note** the [cookie storage model specification][rfc-6265-5.3] states that if both `expires` and\n`maxAge` are set, then `maxAge` takes precedence, but it is possible not all clients by obey this,\nso if both are set, they should point to the same date and time.\n\n##### httpOnly\n\nSpecifies the `boolean` value for the [`HttpOnly` `Set-Cookie` attribute][rfc-6265-5.2.6]. When truthy,\nthe `HttpOnly` attribute is set, otherwise it is not. By default, the `HttpOnly` attribute is not set.\n\n**note** be careful when setting this to `true`, as compliant clients will not allow client-side\nJavaScript to see the cookie in `document.cookie`.\n\n##### maxAge\n\nSpecifies the `number` (in seconds) to be the value for the [`Max-Age` `Set-Cookie` attribute][rfc-6265-5.2.2].\nThe given number will be converted to an integer by rounding down. By default, no maximum age is set.\n\n**note** the [cookie storage model specification][rfc-6265-5.3] states that if both `expires` and\n`maxAge` are set, then `maxAge` takes precedence, but it is possible not all clients by obey this,\nso if both are set, they should point to the same date and time.\n\n##### path\n\nSpecifies the value for the [`Path` `Set-Cookie` attribute][rfc-6265-5.2.4]. By default, the path\nis considered the [\"default path\"][rfc-6265-5.1.4].\n\n##### priority\n\nSpecifies the `string` to be the value for the [`Priority` `Set-Cookie` attribute][rfc-west-cookie-priority-00-4.1].\n\n  - `'low'` will set the `Priority` attribute to `Low`.\n  - `'medium'` will set the `Priority` attribute to `Medium`, the default priority when not set.\n  - `'high'` will set the `Priority` attribute to `High`.\n\nMore information about the different priority levels can be found in\n[the specification][rfc-west-cookie-priority-00-4.1].\n\n**note** This is an attribute that has not yet been fully standardized, and may change in the future.\nThis also means many clients may ignore this attribute until they understand it.\n\n##### sameSite\n\nSpecifies the `boolean` or `string` to be the value for the [`SameSite` `Set-Cookie` attribute][rfc-6265bis-09-5.4.7].\n\n  - `true` will set the `SameSite` attribute to `Strict` for strict same site enforcement.\n  - `false` will not set the `SameSite` attribute.\n  - `'lax'` will set the `SameSite` attribute to `Lax` for lax same site enforcement.\n  - `'none'` will set the `SameSite` attribute to `None` for an explicit cross-site cookie.\n  - `'strict'` will set the `SameSite` attribute to `Strict` for strict same site enforcement.\n\nMore information about the different enforcement levels can be found in\n[the specification][rfc-6265bis-09-5.4.7].\n\n**note** This is an attribute that has not yet been fully standardized, and may change in the future.\nThis also means many clients may ignore this attribute until they understand it.\n\n##### secure\n\nSpecifies the `boolean` value for the [`Secure` `Set-Cookie` attribute][rfc-6265-5.2.5]. When truthy,\nthe `Secure` attribute is set, otherwise it is not. By default, the `Secure` attribute is not set.\n\n**note** be careful when setting this to `true`, as compliant clients will not send the cookie back to\nthe server in the future if the browser does not have an HTTPS connection.\n\n## Example\n\nThe following example uses this module in conjunction with the Node.js core HTTP server\nto prompt a user for their name and display it back on future visits.\n\n```js\nvar cookie = require('cookie');\nvar escapeHtml = require('escape-html');\nvar http = require('http');\nvar url = require('url');\n\nfunction onRequest(req, res) {\n  // Parse the query string\n  var query = url.parse(req.url, true, true).query;\n\n  if (query && query.name) {\n    // Set a new cookie with the name\n    res.setHeader('Set-Cookie', cookie.serialize('name', String(query.name), {\n      httpOnly: true,\n      maxAge: 60 * 60 * 24 * 7 // 1 week\n    }));\n\n    // Redirect back after setting cookie\n    res.statusCode = 302;\n    res.setHeader('Location', req.headers.referer || '/');\n    res.end();\n    return;\n  }\n\n  // Parse the cookies on the request\n  var cookies = cookie.parse(req.headers.cookie || '');\n\n  // Get the visitor name set in the cookie\n  var name = cookies.name;\n\n  res.setHeader('Content-Type', 'text/html; charset=UTF-8');\n\n  if (name) {\n    res.write('<p>Welcome back, <b>' + escapeHtml(name) + '</b>!</p>');\n  } else {\n    res.write('<p>Hello, new visitor!</p>');\n  }\n\n  res.write('<form method=\"GET\">');\n  res.write('<input placeholder=\"enter your name\" name=\"name\"> <input type=\"submit\" value=\"Set Name\">');\n  res.end('</form>');\n}\n\nhttp.createServer(onRequest).listen(3000);\n```\n\n## Testing\n\n```sh\n$ npm test\n```\n\n## Benchmark\n\n```\n$ npm run bench\n\n> cookie@0.4.2 bench\n> node benchmark/index.js\n\n  node@16.14.0\n  v8@9.4.146.24-node.20\n  uv@1.43.0\n  zlib@1.2.11\n  brotli@1.0.9\n  ares@1.18.1\n  modules@93\n  nghttp2@1.45.1\n  napi@8\n  llhttp@6.0.4\n  openssl@1.1.1m+quic\n  cldr@40.0\n  icu@70.1\n  tz@2021a3\n  unicode@14.0\n  ngtcp2@0.1.0-DEV\n  nghttp3@0.1.0-DEV\n\n> node benchmark/parse-top.js\n\n  cookie.parse - top sites\n\n  15 tests completed.\n\n  parse accounts.google.com x 2,421,245 ops/sec ±0.80% (188 runs sampled)\n  parse apple.com           x 2,684,710 ops/sec ±0.59% (189 runs sampled)\n  parse cloudflare.com      x 2,231,418 ops/sec ±0.76% (186 runs sampled)\n  parse docs.google.com     x 2,316,357 ops/sec ±1.28% (187 runs sampled)\n  parse drive.google.com    x 2,363,543 ops/sec ±0.49% (189 runs sampled)\n  parse en.wikipedia.org    x   839,414 ops/sec ±0.53% (189 runs sampled)\n  parse linkedin.com        x   553,797 ops/sec ±0.63% (190 runs sampled)\n  parse maps.google.com     x 1,314,779 ops/sec ±0.72% (189 runs sampled)\n  parse microsoft.com       x   153,783 ops/sec ±0.53% (190 runs sampled)\n  parse play.google.com     x 2,249,574 ops/sec ±0.59% (187 runs sampled)\n  parse plus.google.com     x 2,258,682 ops/sec ±0.60% (188 runs sampled)\n  parse sites.google.com    x 2,247,069 ops/sec ±0.68% (189 runs sampled)\n  parse support.google.com  x 1,456,840 ops/sec ±0.70% (187 runs sampled)\n  parse www.google.com      x 1,046,028 ops/sec ±0.58% (188 runs sampled)\n  parse youtu.be            x   937,428 ops/sec ±1.47% (190 runs sampled)\n  parse youtube.com         x   963,878 ops/sec ±0.59% (190 runs sampled)\n\n> node benchmark/parse.js\n\n  cookie.parse - generic\n\n  6 tests completed.\n\n  simple      x 2,745,604 ops/sec ±0.77% (185 runs sampled)\n  decode      x   557,287 ops/sec ±0.60% (188 runs sampled)\n  unquote     x 2,498,475 ops/sec ±0.55% (189 runs sampled)\n  duplicates  x   868,591 ops/sec ±0.89% (187 runs sampled)\n  10 cookies  x   306,745 ops/sec ±0.49% (190 runs sampled)\n  100 cookies x    22,414 ops/sec ±2.38% (182 runs sampled)\n```\n\n## References\n\n- [RFC 6265: HTTP State Management Mechanism][rfc-6265]\n- [Same-site Cookies][rfc-6265bis-09-5.4.7]\n\n[rfc-west-cookie-priority-00-4.1]: https://tools.ietf.org/html/draft-west-cookie-priority-00#section-4.1\n[rfc-6265bis-09-5.4.7]: https://tools.ietf.org/html/draft-ietf-httpbis-rfc6265bis-09#section-5.4.7\n[rfc-6265]: https://tools.ietf.org/html/rfc6265\n[rfc-6265-5.1.4]: https://tools.ietf.org/html/rfc6265#section-5.1.4\n[rfc-6265-5.2.1]: https://tools.ietf.org/html/rfc6265#section-5.2.1\n[rfc-6265-5.2.2]: https://tools.ietf.org/html/rfc6265#section-5.2.2\n[rfc-6265-5.2.3]: https://tools.ietf.org/html/rfc6265#section-5.2.3\n[rfc-6265-5.2.4]: https://tools.ietf.org/html/rfc6265#section-5.2.4\n[rfc-6265-5.2.5]: https://tools.ietf.org/html/rfc6265#section-5.2.5\n[rfc-6265-5.2.6]: https://tools.ietf.org/html/rfc6265#section-5.2.6\n[rfc-6265-5.3]: https://tools.ietf.org/html/rfc6265#section-5.3\n\n## License\n\n[MIT](LICENSE)\n\n[coveralls-image]: https://badgen.net/coveralls/c/github/jshttp/cookie/master\n[coveralls-url]: https://coveralls.io/r/jshttp/cookie?branch=master\n[github-actions-ci-image]: https://img.shields.io/github/workflow/status/jshttp/cookie/ci/master?label=ci\n[github-actions-ci-url]: https://github.com/jshttp/cookie/actions/workflows/ci.yml\n[node-version-image]: https://badgen.net/npm/node/cookie\n[node-version-url]: https://nodejs.org/en/download\n[npm-downloads-image]: https://badgen.net/npm/dm/cookie\n[npm-url]: https://npmjs.org/package/cookie\n[npm-version-image]: https://badgen.net/npm/v/cookie\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jshttp/cookie.git"
  },
  "scripts": {
    "bench": "node benchmark/index.js",
    "lint": "eslint .",
    "test": "mocha --reporter spec --bail --check-leaks test/",
    "test-ci": "nyc --reporter=lcov --reporter=text npm test",
    "test-cov": "nyc --reporter=html --reporter=text npm test",
    "update-bench": "node scripts/update-benchmark.js",
    "version": "node scripts/version-history.js && git add HISTORY.md"
  },
  "version": "0.5.0"
}
