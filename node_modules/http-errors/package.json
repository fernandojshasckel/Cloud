{
  "_args": [
    [
      {
        "raw": "http-errors@2.0.0",
        "scope": null,
        "escapedName": "http-errors",
        "name": "http-errors",
        "rawSpec": "2.0.0",
        "spec": "2.0.0",
        "type": "version"
      },
      "C:\\Users\\fernando.hasckel\\Documents\\prodeto-pessoal\\Cloud\\node_modules\\express"
    ]
  ],
  "_from": "http-errors@2.0.0",
  "_hasShrinkwrap": false,
  "_id": "http-errors@2.0.0",
  "_location": "/http-errors",
  "_nodeVersion": "16.7.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/http-errors_2.0.0_1639798242023_0.673094171428414"
  },
  "_npmUser": {
    "name": "dougwilson",
    "email": "doug@somethingdoug.com"
  },
  "_npmVersion": "7.20.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "http-errors@2.0.0",
    "scope": null,
    "escapedName": "http-errors",
    "name": "http-errors",
    "rawSpec": "2.0.0",
    "spec": "2.0.0",
    "type": "version"
  },
  "_requiredBy": [
    "/body-parser",
    "/express",
    "/raw-body",
    "/send"
  ],
  "_resolved": "https://registry.npmjs.org/http-errors/-/http-errors-2.0.0.tgz",
  "_shasum": "b7774a1486ef73cf7667ac9ae0858c012c57b9d3",
  "_shrinkwrap": null,
  "_spec": "http-errors@2.0.0",
  "_where": "C:\\Users\\fernando.hasckel\\Documents\\prodeto-pessoal\\Cloud\\node_modules\\express",
  "author": {
    "name": "Jonathan Ong",
    "email": "me@jongleberry.com",
    "url": "http://jongleberry.com"
  },
  "bugs": {
    "url": "https://github.com/jshttp/http-errors/issues"
  },
  "contributors": [
    {
      "name": "Alan Plum",
      "email": "me@pluma.io"
    },
    {
      "name": "Douglas Christopher Wilson",
      "email": "doug@somethingdoug.com"
    }
  ],
  "dependencies": {
    "depd": "2.0.0",
    "inherits": "2.0.4",
    "setprototypeof": "1.2.0",
    "statuses": "2.0.1",
    "toidentifier": "1.0.1"
  },
  "description": "Create HTTP error objects",
  "devDependencies": {
    "eslint": "7.32.0",
    "eslint-config-standard": "14.1.1",
    "eslint-plugin-import": "2.25.3",
    "eslint-plugin-markdown": "2.2.1",
    "eslint-plugin-node": "11.1.0",
    "eslint-plugin-promise": "5.2.0",
    "eslint-plugin-standard": "4.1.0",
    "mocha": "9.1.3",
    "nyc": "15.1.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-FtwrG/euBzaEjYeRqOgly7G0qviiXoJWnvEH2Z1plBdXgbyjv34pHTSb9zoeHMyDy33+DWy5Wt9Wo+TURtOYSQ==",
    "shasum": "b7774a1486ef73cf7667ac9ae0858c012c57b9d3",
    "tarball": "https://registry.npmjs.org/http-errors/-/http-errors-2.0.0.tgz",
    "fileCount": 5,
    "unpackedSize": 18808,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhvVXiCRA9TVsSAnZWagAA4OwP/3QPkXOVfeSayHzOjAvN\nl54inTVNaO1VHEg6sIfaSq3mfqXcN6vdISilMP5/VAxSNAxGI8FqX4wc4FDp\nrC1rQc5V9cMNC0PioqkjZMImQin0JYrbOQUUxReMjZozddY7plN3A1YOfAXZ\n+HtsavBLOdHQP9XKtbroQZhxptbo2dG8Kk12RAgdKz4Ypfe9r7L/FesYJ2A8\nrMZDL2JnMSC0TeQUd9yKU6rMlH7yQg3UmARgqTtr+BVLuYsgIRXUpfp2Sxd/\nKelg+XwKtJdykq4aF/1cYGXX0uWh6iNUlSmabXSxwKhRD7UB0aIBPn+Dr5jl\nQsK88LTHC4F+aeTUCiEvlcGb9WywsK1wJzV8P6aoP/cmlGZqUThZHZ+ZRboo\n/Mz/adRVFsiPFiYcfJXlsHhFqaiZm5aF/ZUU7NjrxWWAiqIIevl0ysUtCNpQ\n2SICRsp+h9QiwfmhjjAI1Om0FH1DRY4vlohVUzqiaXGBbOQinxKk2dqUtfS3\nyIyUdZDauccKrhMnbJH0wVky41EGUAfehtbiiHhnLg7fnqxejmyCchEUFrfo\ns9g+vhN6Svn+cjjbl8F8JjqMmtanMONlg/7vCC3fSN2l+2OwMcBzDzRz0kYL\nk/FdknbGitDdcPc52WAwXG1vydD+9B+E7yYX2ERY0fJoZjJ9ugpbMGEfL9n9\n9B41\r\n=5cFj\r\n-----END PGP SIGNATURE-----\r\n",
    "signatures": [
      {
        "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
        "sig": "MEQCID1XrfQ8ZFxajv1NEQ/9Riw7BeBDOJ01mbr8+OpDAncpAiAt33KnKPmlGRwT7hlvNBgWimpDHlRcvgL8/zyrUq7VZg=="
      }
    ]
  },
  "engines": {
    "node": ">= 0.8"
  },
  "files": [
    "index.js",
    "HISTORY.md",
    "LICENSE",
    "README.md"
  ],
  "gitHead": "206aa2c15635dc1212c06c279540972aa90e23ea",
  "homepage": "https://github.com/jshttp/http-errors#readme",
  "keywords": [
    "http",
    "error"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "egeste",
      "email": "npm@egeste.net"
    },
    {
      "name": "dougwilson",
      "email": "doug@somethingdoug.com"
    },
    {
      "name": "jongleberry",
      "email": "jonathanrichardong@gmail.com"
    }
  ],
  "name": "http-errors",
  "optionalDependencies": {},
  "readme": "# http-errors\n\n[![NPM Version][npm-version-image]][npm-url]\n[![NPM Downloads][npm-downloads-image]][node-url]\n[![Node.js Version][node-image]][node-url]\n[![Build Status][ci-image]][ci-url]\n[![Test Coverage][coveralls-image]][coveralls-url]\n\nCreate HTTP errors for Express, Koa, Connect, etc. with ease.\n\n## Install\n\nThis is a [Node.js](https://nodejs.org/en/) module available through the\n[npm registry](https://www.npmjs.com/). Installation is done using the\n[`npm install` command](https://docs.npmjs.com/getting-started/installing-npm-packages-locally):\n\n```console\n$ npm install http-errors\n```\n\n## Example\n\n```js\nvar createError = require('http-errors')\nvar express = require('express')\nvar app = express()\n\napp.use(function (req, res, next) {\n  if (!req.user) return next(createError(401, 'Please login to view this page.'))\n  next()\n})\n```\n\n## API\n\nThis is the current API, currently extracted from Koa and subject to change.\n\n### Error Properties\n\n- `expose` - can be used to signal if `message` should be sent to the client,\n  defaulting to `false` when `status` >= 500\n- `headers` - can be an object of header names to values to be sent to the\n  client, defaulting to `undefined`. When defined, the key names should all\n  be lower-cased\n- `message` - the traditional error message, which should be kept short and all\n  single line\n- `status` - the status code of the error, mirroring `statusCode` for general\n  compatibility\n- `statusCode` - the status code of the error, defaulting to `500`\n\n### createError([status], [message], [properties])\n\nCreate a new error object with the given message `msg`.\nThe error object inherits from `createError.HttpError`.\n\n```js\nvar err = createError(404, 'This video does not exist!')\n```\n\n- `status: 500` - the status code as a number\n- `message` - the message of the error, defaulting to node's text for that status code.\n- `properties` - custom properties to attach to the object\n\n### createError([status], [error], [properties])\n\nExtend the given `error` object with `createError.HttpError`\nproperties. This will not alter the inheritance of the given\n`error` object, and the modified `error` object is the\nreturn value.\n\n<!-- eslint-disable no-redeclare -->\n\n```js\nfs.readFile('foo.txt', function (err, buf) {\n  if (err) {\n    if (err.code === 'ENOENT') {\n      var httpError = createError(404, err, { expose: false })\n    } else {\n      var httpError = createError(500, err)\n    }\n  }\n})\n```\n\n- `status` - the status code as a number\n- `error` - the error object to extend\n- `properties` - custom properties to attach to the object\n\n### createError.isHttpError(val)\n\nDetermine if the provided `val` is an `HttpError`. This will return `true`\nif the error inherits from the `HttpError` constructor of this module or\nmatches the \"duck type\" for an error this module creates. All outputs from\nthe `createError` factory will return `true` for this function, including\nif an non-`HttpError` was passed into the factory.\n\n### new createError\\[code || name\\](\\[msg]\\))\n\nCreate a new error object with the given message `msg`.\nThe error object inherits from `createError.HttpError`.\n\n```js\nvar err = new createError.NotFound()\n```\n\n- `code` - the status code as a number\n- `name` - the name of the error as a \"bumpy case\", i.e. `NotFound` or `InternalServerError`.\n\n#### List of all constructors\n\n|Status Code|Constructor Name             |\n|-----------|-----------------------------|\n|400        |BadRequest                   |\n|401        |Unauthorized                 |\n|402        |PaymentRequired              |\n|403        |Forbidden                    |\n|404        |NotFound                     |\n|405        |MethodNotAllowed             |\n|406        |NotAcceptable                |\n|407        |ProxyAuthenticationRequired  |\n|408        |RequestTimeout               |\n|409        |Conflict                     |\n|410        |Gone                         |\n|411        |LengthRequired               |\n|412        |PreconditionFailed           |\n|413        |PayloadTooLarge              |\n|414        |URITooLong                   |\n|415        |UnsupportedMediaType         |\n|416        |RangeNotSatisfiable          |\n|417        |ExpectationFailed            |\n|418        |ImATeapot                    |\n|421        |MisdirectedRequest           |\n|422        |UnprocessableEntity          |\n|423        |Locked                       |\n|424        |FailedDependency             |\n|425        |TooEarly                     |\n|426        |UpgradeRequired              |\n|428        |PreconditionRequired         |\n|429        |TooManyRequests              |\n|431        |RequestHeaderFieldsTooLarge  |\n|451        |UnavailableForLegalReasons   |\n|500        |InternalServerError          |\n|501        |NotImplemented               |\n|502        |BadGateway                   |\n|503        |ServiceUnavailable           |\n|504        |GatewayTimeout               |\n|505        |HTTPVersionNotSupported      |\n|506        |VariantAlsoNegotiates        |\n|507        |InsufficientStorage          |\n|508        |LoopDetected                 |\n|509        |BandwidthLimitExceeded       |\n|510        |NotExtended                  |\n|511        |NetworkAuthenticationRequired|\n\n## License\n\n[MIT](LICENSE)\n\n[ci-image]: https://badgen.net/github/checks/jshttp/http-errors/master?label=ci\n[ci-url]: https://github.com/jshttp/http-errors/actions?query=workflow%3Aci\n[coveralls-image]: https://badgen.net/coveralls/c/github/jshttp/http-errors/master\n[coveralls-url]: https://coveralls.io/r/jshttp/http-errors?branch=master\n[node-image]: https://badgen.net/npm/node/http-errors\n[node-url]: https://nodejs.org/en/download\n[npm-downloads-image]: https://badgen.net/npm/dm/http-errors\n[npm-url]: https://npmjs.org/package/http-errors\n[npm-version-image]: https://badgen.net/npm/v/http-errors\n[travis-image]: https://badgen.net/travis/jshttp/http-errors/master\n[travis-url]: https://travis-ci.org/jshttp/http-errors\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jshttp/http-errors.git"
  },
  "scripts": {
    "lint": "eslint . && node ./scripts/lint-readme-list.js",
    "test": "mocha --reporter spec --bail",
    "test-ci": "nyc --reporter=lcov --reporter=text npm test",
    "test-cov": "nyc --reporter=html --reporter=text npm test",
    "version": "node scripts/version-history.js && git add HISTORY.md"
  },
  "version": "2.0.0"
}
